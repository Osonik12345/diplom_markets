version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: russian-markets-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - russian-markets-net
    healthcheck:
      test: >
        /bin/bash -c '
          pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB" &&
          psql -U "$$POSTGRES_USER" -d "$$POSTGRES_DB" -tAc "SELECT COUNT(*) FROM mv_markets_export" | grep -E "^[1-9][0-9]*$$"
        '
      interval: 10s
      timeout: 5s
      retries: 60
      start_period: 120s

  minio:
    image: minio/minio:latest
    container_name: russian-markets-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - russian-markets-net

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: russian-markets-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      DB_HOST: postgres
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
    ports:
      - "5000:5000"
    networks:
      - russian-markets-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  russian-markets-net:
    driver: bridge